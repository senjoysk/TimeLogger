# コード品質チェック
npm run build

# テスト実行と失敗分析
echo "🧪 Pre-commit check: テスト実行と失敗分析..."
./scripts/test-analysis.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "❌ テストに失敗しました。"
    echo "📋 test-reports/ディレクトリ内の詳細ログを確認してください。"
    echo ""
    exit 1
fi

echo "✅ 全テスト成功"

# 🆕 SRP（単一責任原則）違反チェック
echo "🔍 Pre-commit check: SRP違反チェック..."
./scripts/code-review/srp-violation-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ SRP（単一責任原則）違反が検出されました。"
    echo "📋 ファイル分割または例外指定（@SRP-EXCEPTION）後に再度コミットしてください。"
    echo ""
    exit 1
fi

echo "✅ SRP違反チェック通過"

# 🆕 ファイルサイズ監視チェック
echo "🔍 Pre-commit check: ファイルサイズ監視..."
./scripts/code-review/file-size-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ 巨大ファイルが検出されました。"
    echo "📋 ファイル分割後に再度コミットしてください。"
    echo ""
    exit 1
fi

echo "✅ ファイルサイズチェック通過"

# 依存性注入とany型使用のチェック
./scripts/code-review/dependency-injection-check.sh

# 🆕 エラー処理規約チェック
echo "🔍 Pre-commit check: エラー処理規約チェック..."
./scripts/code-review/error-handling-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ エラー処理規約違反が検出されました。"
    echo "📋 CLAUDE.md のエラー処理規約セクションを確認して修正してください。"
    echo ""
    exit 1
fi

echo "✅ エラー処理規約チェック通過"

# 🆕 Console使用チェック
echo "🔍 Pre-commit check: Console使用チェック..."
./scripts/code-review/console-usage-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ console.log/console.error の直接使用が検出されました。"
    echo "📋 logger サービスを使用してください。"
    echo ""
    exit 1
fi

echo "✅ Console使用チェック通過"

# 🆕 型安全性チェック
echo "🔍 Pre-commit check: 型安全性チェック..."
./scripts/code-review/type-safety-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ 型安全性の問題が検出されました。"
    echo "📋 any型の使用や型注釈不足を修正してください。"
    echo ""
    exit 1
fi

echo "✅ 型安全性チェック通過"

# データベースパス妥当性チェック
echo "🔍 Pre-commit check: データベースパス妥当性確認..."
npm run check:database-paths

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ 禁止されたデータベースパス (activity_logs.db) が検出されました。"
    echo "📋 修正後に再度コミットしてください。"
    echo ""
    exit 1
fi

echo "✅ データベースパス妥当性チェック通過"

# 🆕 エラーハンドリング重複チェック（Issue #62対応）
echo "🔍 Pre-commit check: エラーハンドリング重複チェック..."
./scripts/code-review/error-handling-duplication-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ エラーハンドリング重複が検出されました。"
    echo "📋 統一エラーハンドラー（withErrorHandling系）を使用してください。"
    echo ""
    exit 1
fi

echo "✅ エラーハンドリング重複チェック通過"

# 🆕 レイヤー分離チェック（Issue #61対応）
echo "🔍 Pre-commit check: レイヤー分離チェック..."
./scripts/code-review/layer-separation-check.sh

if [ $? -ne 0 ]; then
    echo ""
    echo "🚨 コミットが阻止されました！"
    echo "🛠️ レイヤー分離違反が検出されました。"
    echo "📋 サービス層でのDB/API直接使用を修正してください。"
    echo ""
    exit 1
fi

echo "✅ レイヤー分離チェック通過"