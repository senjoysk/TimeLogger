# Production環境品質チェックワークフロー
# main ブランチの変更時に品質チェック（デプロイはローカルで手動実行）

name: Production Quality Check
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm_production:
        description: '本番環境へのデプロイを確認してください'
        required: true
        default: false
        type: boolean
      environment:
        description: 'デプロイ環境'
        required: true
        default: 'production'
        type: choice
        options:
          - 'production'

# 注意: デプロイはローカルで手動実行してください
# 実行方法: ./scripts/production/deploy.sh

jobs:
  quality-check:
    runs-on: ubuntu-latest
    name: 品質チェック
    outputs:
      build-success: ${{ steps.build.outputs.success }}
      test-success: ${{ steps.test.outputs.success }}
    
    steps:
      - name: 📥 リポジトリチェックアウト
        uses: actions/checkout@v4
      
      - name: 🔧 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📦 依存関係インストール
        run: npm ci
      
      - name: 🏗️ TypeScriptビルド
        id: build
        run: |
          npm run build
          echo "success=true" >> $GITHUB_OUTPUT
      
      - name: 🧪 テスト実行（CI環境最適化）
        id: test
        env:
          CI: true
        run: |
          npm test
          npm run test:integration
          echo "success=true" >> $GITHUB_OUTPUT
      
      - name: 📊 テストカバレッジ確認
        run: npm run test:coverage

  manual-deploy-guide:
    needs: quality-check
    if: needs.quality-check.outputs.build-success == 'true'
    runs-on: ubuntu-latest
    name: 手動デプロイガイド
    
    steps:
      - name: 🔒 本番環境デプロイ確認
        run: |
          echo "🔒 本番環境デプロイの準備が完了しました"
          echo "========================================="
          echo "🌿 ブランチ: ${{ github.ref_name }}"
          echo "📝 コミット: ${{ github.sha }}"
          echo "🕐 チェック時刻: $(date)"
          echo "🧪 テスト結果: ${{ needs.quality-check.outputs.test-success == 'true' && '✅ 成功' || '❌ 失敗' }}"
          echo "🏗️ ビルド結果: ${{ needs.quality-check.outputs.build-success == 'true' && '✅ 成功' || '❌ 失敗' }}"
          echo ""
          echo "⚠️ 本番環境デプロイは手動で実行してください"
          
      - name: 💡 手動デプロイガイド
        run: |
          echo ""
          echo "🚀 Production環境への手動デプロイ方法:"
          echo "========================================="
          echo ""
          echo "1. ローカルでmainブランチをpull:"
          echo "   git checkout main"
          echo "   git pull origin main"
          echo ""
          echo "2. Production環境にデプロイ:"
          echo "   ./scripts/production/deploy.sh"
          echo ""
          echo "3. デプロイ確認:"
          echo "   - Production環境URL: https://timelogger-bitter-resonance-9585.fly.dev"
          echo "   - ヘルスチェック: https://timelogger-bitter-resonance-9585.fly.dev/health"
          echo ""
          echo "4. 重要な動作テスト:"
          echo "   - Discord Bot の基本動作確認"
          echo "   - 実際のユーザーとのコマンド動作確認"
          echo "   - データベースの正常性確認"
          echo ""
          echo "⚠️ 本番環境デプロイの注意点:"
          echo "   - 営業時間外での実行を推奨"
          echo "   - ロールバック手順を事前に確認"
          echo "   - デプロイ後の動作監視を実施"
          echo ""
          echo "🔍 トラブルシューティング:"
          echo "   - ログ確認: flyctl logs --app timelogger-bitter-resonance-9585"
          echo "   - マシン状態: flyctl machines list --app timelogger-bitter-resonance-9585"
          echo "   - アプリ状態: flyctl status --app timelogger-bitter-resonance-9585"
