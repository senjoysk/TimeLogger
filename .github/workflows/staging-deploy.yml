# Staging環境品質チェックワークフロー
# develop ブランチの変更時に品質チェック（デプロイはローカルで手動実行）

name: Staging Quality Check
on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'テストをスキップ（緊急時のみ）'
        required: false
        default: false
        type: boolean
      environment:
        description: 'テスト環境'
        required: true
        default: 'staging'
        type: choice
        options:
          - 'staging'

# 注意: デプロイはローカルで手動実行してください
# 実行方法: ./scripts/staging/deploy-to-staging.sh

jobs:
  quality-check:
    runs-on: ubuntu-latest
    name: 品質チェック
    outputs:
      build-success: ${{ steps.build.outputs.success }}
      test-success: ${{ steps.test.outputs.success }}
    
    steps:
      - name: 📥 リポジトリチェックアウト
        uses: actions/checkout@v4
      
      - name: 🔧 Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📦 依存関係インストール
        run: npm ci
      
      - name: 🏗️ TypeScriptビルド
        id: build
        run: |
          npm run build
          echo "success=true" >> $GITHUB_OUTPUT
      
      - name: 🧪 テスト実行
        id: test
        if: github.event.inputs.skip_tests != 'true'
        run: |
          npm test
          npm run test:integration
          echo "success=true" >> $GITHUB_OUTPUT
      
      - name: 📊 テストカバレッジ確認
        if: github.event.inputs.skip_tests != 'true'
        run: npm run test:coverage

  manual-deploy-guide:
    needs: quality-check
    if: needs.quality-check.outputs.build-success == 'true'
    runs-on: ubuntu-latest
    name: 手動デプロイガイド
    
    steps:
      - name: 📊 品質チェック完了通知
        run: |
          echo "✅ 品質チェックが完了しました！"
          echo "======================================"
          echo "🌿 ブランチ: ${{ github.ref_name }}"
          echo "📝 コミット: ${{ github.sha }}"
          echo "🕐 チェック時刻: $(date)"
          echo "🧪 テスト結果: ${{ needs.quality-check.outputs.test-success == 'true' && '✅ 成功' || '⚠️ スキップ' }}"
          echo "🏗️ ビルド結果: ${{ needs.quality-check.outputs.build-success == 'true' && '✅ 成功' || '❌ 失敗' }}"
          echo ""
          echo "📝 手動デプロイの準備が整いました！"
          
      - name: 💡 手動デプロイガイド
        run: |
          echo ""
          echo "🚀 Staging環境への手動デプロイ方法:"
          echo "======================================"
          echo ""
          echo "1. ローカルでブランチをpull:"
          echo "   git checkout develop"
          echo "   git pull origin develop"
          echo ""
          echo "2. Staging環境にデプロイ:"
          echo "   ./scripts/staging/deploy-to-staging.sh"
          echo ""
          echo "3. デプロイ確認:"
          echo "   - Staging環境URL: https://timelogger-staging.fly.dev"
          echo "   - ヘルスチェック: https://timelogger-staging.fly.dev/health"
          echo ""
          echo "4. 動作テスト:"
          echo "   - Discord Bot の基本動作"
          echo "   - !cost, !summary, !timezone コマンド"
          echo ""
          echo "5. 問題なければ main ブランチにマージ"
          echo "   → Production環境への自動デプロイ"
          echo ""
          echo "⚠️ 注意: GitHub Actionsからの自動デプロイは無効化されています"